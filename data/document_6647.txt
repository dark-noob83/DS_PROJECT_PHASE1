Time and frequency domain for the same signal. A fast Fourier transform (FFT) algorithm computes the discrete Fourier transform (DFT) of a sequence, or its inverse. Fourier analysis converts a signal from its original domain (often time or space) to a representation in the frequency domain and vice versa. 
The fft() function calculates the one-dimensional FFT of its input argument. If the input argument is a vector, then the operation is pretty simple to understand; the output is just the result of efficiently calculating a discrete Fourier transform on the input. The fft2() function calculates the two-dimensional FFT of a matrix. One way of envisioning this operation is to take standard one-dimensional FFTs down each column of the input matrix $A$ to yield a temporary result $B$.
Description. example. Y = fft(X) computes the discrete Fourier transform (DFT) of X using a fast Fourier transform (FFT) algorithm. If X is a vector, then fft(X) returns the Fourier transform of the vector. If X is a matrix, then fft(X) treats the columns of X as vectors and returns the Fourier transform of each column. Input array, specified as a vector, matrix, or multidimensional array. Input arrays of 8-bit or 16-bit unsigned integers are cast to double prior to computing the Fourier transform. If X is an empty 0-by-0 matrix, then fft(X) returns an empty 0-by-0 matrix.
If the input is a matrix, then, as many MATLAB functions do, each column is treated as a separate one-dimensional signal and are transformed separately. Therefore, the $n$-th column of the output matrix corresponds to the DFT of the $n$-th column of the input matrix. The fft2() function calculates the two-dimensional FFT of a matrix. One way of envisioning this operation is to take standard one-dimensional FFTs down each column of the input matrix $A$ to yield a temporary result $B$.
When using FFT algorithms, a distinction is made between the window length and the transform length. The window length is the length of the input data vector. It is determined by, for example, the size of an external buffer. The transform length is the length of the output, the computed DFT. In this call to fft, the window length m = length(x) and the transform length n = length(y) are the same. The transform length is specified by an optional second argument: In this call to fft, the transform length is n.
Plot the pulse in the time domain. To use the fft function to convert the signal to the frequency domain, first identify a new input length that is the next power of 2 from the original signal length. This will pad the signal X with trailing zeros in order to improve the performance of fft. Input array, specified as a vector, matrix, or multidimensional array. Input arrays of 8-bit or 16-bit unsigned integers are cast to double prior to computing the Fourier transform. If X is an empty 0-by-0 matrix, then fft(X) returns an empty 0-by-0 matrix.
Symmetry: When the region between 0 and fs is examined, it can be seen that there is even symmetry around the center point, 0.5fs. 4. Matlab and the FFT Matlab's FFT function is an effective tool for computing the discrete Fourier transform of a signal. The following code examples will help you to understand the details of using the FFT function. 
The MATLAB fft function returns the DFT y of an input vector x using a fast Fourier transform algorithm: In this call to fft, the window length m = length(x) and the transform length n = length(y) are the same. The transform length is specified by an optional second argument: In this call to fft, the transform length is n. If the length of x is less than n, x is padded with trailing zeros to increase its length to n before computing the DFT. If the length of x is greater than n, only the first n elements of x are used to compute the transform.
*. My last question: how do we understand convolution in matlab? For example: now we have two functions: x(t) and y(t), and t = 1:1:10, we want to get z(t) = x(t)*y(t). Obviously, length of z(t) should be the same as t, x(t) and y(t), i.e. 10. But if we use 'conv' function, we will get a result of length 2*10-1 = 19; if we use 'ifft(fft)', we will get a result of length 10 - the same length as x and y; if we use 'ifft(fft(x,n))', the result will be length n-the number we assigned. Hi, I'm trying to obtain convolution of two vectors using 'conv' and 'fft' function in matlab. For example: con_xy1 =. con_xy2 =. Obviously, the first six values in con_xy1 is identical to con_xy2.