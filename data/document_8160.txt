An enumeration type (also named an enumeration or an enum) provides an efficient way to define a set of named integral constants that may be assigned to a variable. For example, assume that you have to define a variable whose value will represent a day of the week.
Short for enumeration, an enum variable type can be found in C (Ansi, not the original K&R), C++ and C# . The idea is that instead of using an int to represent a set of values, a type with a restricted set of values in used instead. For example if we use the colors of the rainbow, which are. 1  Red.
What is enumeration in C#. by Dinesh Thakur. An enumeration is a special set of numeric type string literals which considered as a constants. An enumeration is a special kind of value type limited to a restricted and unchangeable set of numerical values.
The enum keyword is used to declare an enumeration, a distinct type that consists of a set of named constants called the enumerator list. Usually it is best to define an enum directly within a namespace so that all classes in the namespace can access it with equal convenience.
To define those values, you can use an enumeration type, which is declared by using the enum keyword. C#. Copy. By default the underlying type of each element in the enum is int. You can specify another integral numeric type by using a colon, as shown in the previous example.
Just as with any constant, all references to the individual values of an enum are converted to numeric literals at compile time. This can create potential versioning issues as described in Constants (C# Programming Guide) .
up vote 3 down vote. There are two meanings of enumeration in C#. An enumeration (noun) is a set of named values. Example: Enumeration (noun form of the verb enumerate) is when you step through the items in a collection. The interface is used by classes that provide the ability to be enumerated.