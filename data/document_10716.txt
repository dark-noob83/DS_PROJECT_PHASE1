In software and systems engineering, a use case is a list of action or event steps, typically defining the interactions between a role (known in the Unified Modeling Language as an actor) and a system, to achieve a goal. The actor can be a human, an external system, or time.
Part of the Project management glossary: A use case diagram is a graphic depiction of the interactions among the elements of a system. A use case is a methodology used in system analysis to identify, clarify, and organize system requirements. In this context, the term system refers to something being developed or operated, such as a mail-order product sales and service Web site.
Source of my Use Case definition. This Use Case definition comes from my knowledge of counting Function Points, more specifically the technique known as Function Point Analysis, or FPA. You see, the Use Case definition I just set forth is actually the definition of an elementary process in Function Point Analysis.
A use case is a series of related interactions between a user (or more generally, an “actor”) and a system that enables the user to achieve a goal. To phrase this definition in another way, a use case describes the system’s behavior as it responds to a series of related requests from an actor. Use cases are perhaps the best way to capture functional requirements of a system.
vs. Oracle Application Testing Suite. A use case is a methodology used in system analysis to identify, clarify, and organize system requirements. The use case is made up of a set of possible sequences of interactions between systems and users in a particular environment and related to a particular goal.