The shell provides you with an interface to the UNIX system. It gathers input from you and executes programs based on that input. When a program finishes executing, it displays that program's output. A shell is an environment in which we can run our commands, programs, and shell scripts. 
Created to improve on the earlier sh shell, Bash includes features from the Korn shell and the C shell. Bash is intended to conform to the shell standard specified as part of IEEE POSIX. A command language script written for the sh shell will also run in the bash shell. The full name is sometimes written as Bourne Again SHell, the capitalized Hell referring to the difficulty some people have with it.
Bash is a POSIX shell, but with a number of extensions. The name itself is an acronym, a pun, and a description. As an acronym, it stands for Bourne-again shell, referring to its objective as a free replacement for the Bourne shell. The skeleton ~/.bash_profile below is compatible with the Bourne shell and gives semantics similar to csh for the ~/.bashrc and ~/.bash_login. The [ -r filename ] are tests to see if the filename exists and is readable, simply skipping the part after the && if it's not.
The GNU project (GNU's Not UNIX) provides tools for UNIX-like system administration which are free software and comply to UNIX standards. Bash is an sh-compatible shell that incorporates useful features from the Korn shell (ksh) and C shell (csh). 
In Unix, the shell is a program that interprets commands and acts as an intermediary between the user and the inner workings of the operating system. To Unix, the shell is just another program. For this reason, any program can be designated a login shell in /etc/shells. For example, some Emacs users pride themselves on never needing a traditional shell prompt.
Bash (software) redirects here. For other software, see Bash (disambiguation) . Bash is a Unix shell and command language written by Brian Fox for the GNU Project as a free software replacement for the Bourne shell. Released in 1989, it has been distributed widely as the shell for the GNU operating system and as a default shell on Linux and OS X. The skeleton ~/.bash_profile below is compatible with the Bourne shell and gives semantics similar to csh for the ~/.bashrc and ~/.bash_login. The [ -r filename ] are tests to see if the filename exists and is readable, simply skipping the part after the && if it's not.
Providing a command-line interface (i.e., the shell prompt or command prompt), the shell is analogous to DOS and serves a purpose similar to graphical interfaces like Windows, Mac OS X, and the X Window System. On most Unix systems, there are several shells available. To Unix, the shell is just another program. For this reason, any program can be designated a login shell in /etc/shells. For example, some Emacs users pride themselves on never needing a traditional shell prompt.
A Unix shell is a command-line interpreter or shell that provides a traditional user interface for the Unix operating system and for Unix-like systems. The Unix shell is both an interactive command language as well as a scripting programming language, and is used by the operating system as the facility to control (shell script) the execution of the system.
Bash is a Unix shell: a command-line interface for interacting with the operating system. It is widely available, being the default shell on many GNU/Linux distributions and on Mac OS X; and ports exist for many other systems. 
In Unix-like operating systems, users typically have many choices of command-line interpreters for interactive sessions. When a user logs in to the system interactively, a shell program is automatically executed for the duration of the session. The Unix shell is both an interactive command language as well as a scripting programming language, and is used by the operating system as the facility to control (shell script) the execution of the system.