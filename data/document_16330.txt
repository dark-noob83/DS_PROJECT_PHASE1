From Wikipedia, the free encyclopedia. Path MTU Discovery (PMTUD) is a standardized technique in computer networking for determining the maximum transmission unit (MTU) size on the network path between two Internet Protocol (IP) hosts, usually with the goal of avoiding IP fragmentation. 
1 TCP MSS clamping can be configured on end hosts or on some routers (on Cisco IOS, use ip tcp adjust-mss interface configuration command). 1 The ip tcp adjust-mss functionality on Cisco IOS is bidirectional – MSS option is adjusted in inbound and outbound TCP SYN packets traversing the interface on which ip tcp adjust-mss is configured.
The TCP protocol, which is what looking at web pages and reading email and, increasingly streaming video uses has its own interactions with the MTU. It has a concept of Maximum Segment Size or MSS. This is simply the amount of useful data in a packet, or just the MTU less the IP and TCP headers. TCP also contains a clever mechanism for figuring out what the correct MSS value ought to be along the path that a connection traverses. It begins with a guess: \(MTU - 20 - 20\) where the IP header and the TCP header are both 20 bytes. So typically it will start with the MSS at 1460. The standard size packet, for mostly historical reasons, and because Ethernet is so common, is 1500 bytes long. This value is known as the Maximum Transmission Unit or MTU of a particular link. There are some trade-offs involved here.
Circumventing Path MTU Discovery issues with MSS Clamping (for ADSL, cable, PPPoE & PPtP users). Besides MTU, there is yet another way to set the maximum packet size, the so called Maximum Segment Size. This is a field in the TCP Options part of a SYN packet. Recent Linux kernels, and a few PPPoE drivers (notably, the excellent Roaring Penguin one), feature the possibility to 'clamp the MSS'. 
MSS Clamping is a process on your router or firewall that digs deep into the packets you send out while negotiating connections and adjusts the MSS level lower than your machines actually set it. This way the webservers (and other hosts) will send smaller packets that will get through. This is sub-optimal. MSS Clamping. 
1. With IPv4, TCP MSS clamping (a network device editing the MSS value in a TCP header) can help when path maximum transmission unit discovery is not working. This Juniper page is a bit old but it shows that you can clamp an MSS for TCP over IPv6 on Junos the same as you would in IPv4 using the same command, tcp mss.
MTU Discovery and MSS Clamping. When data is transmitted over an IP link it is broken into packets. The standard size packet, for mostly historical reasons, and because Ethernet is so common, is 1500 bytes long. This value is known as the Maximum Transmission Unit or MTU of a particular link. There are some trade-offs involved here.
By Ivan Pepelnjak Click here to subscribe to my SDN mailing list. This (not so very) short video explains what TCP MSS clamping is and why we’re almost forced to use it on xDSL (PPPoE) and tunnel interfaces (TL&DR summary: because Internet-wide Path MTU Discovery rarely works). If you liked the video, subscribe to my podcast, or add my podcast to your iTunes. 1 The ip tcp adjust-mss functionality on Cisco IOS is bidirectional – MSS option is adjusted in inbound and outbound TCP SYN packets traversing the interface on which ip tcp adjust-mss is configured.
From Wikipedia, the free encyclopedia. The maximum segment size (MSS) is a parameter of the Options field of the TCP header that specifies the largest amount of data, specified in octets, that a computer or communications device can receive in a single TCP segment. It does not count the TCP header or the IP header. 