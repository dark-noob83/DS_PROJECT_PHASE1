Current release: valgrind-3.11.0. Valgrind is an instrumentation framework for building dynamic analysis tools. There are Valgrind tools that can automatically detect many memory management and threading bugs, and profile your programs in detail. You can also use Valgrind to build new tools. The Valgrind distribution currently includes six production-quality tools: a memory error detector, two thread error detectors, a cache and branch-prediction profiler, a call-graph generating cache and branch-prediction profiler, and a heap profiler. 
Valgrind /ˈvaelɡrɪnd/ ˈvælɡrɪnd is a programming tool for memory, debugging memory leak, detection and. profiling 1 Since valgrind itself provides a trace back from a segmentation fault, the none tool provides this traceback at minimal overhead. 2  Addrcheck, similar to Memcheck but with much smaller CPU and memory overhead, thus catching fewer types of bug. 3  Addrcheck has been removed as of version 3.2.0.
Valgrind is a multipurpose code profiling and memory debugging tool for Linux when on the x86 and, as of version 3, AMD64, architectures. It allows you to run your program in Valgrind's own environment that monitors memory usage such as calls to malloc and free (or new and delete in C++). 
Valgrind was originally designed to be a free memory debugging tool for Linux on x86, but has since evolved to become a generic framework for creating dynamic analysis tools such as checkers and profilers. 1 Since valgrind itself provides a trace back from a segmentation fault, the none tool provides this traceback at minimal overhead. 2  Addrcheck, similar to Memcheck but with much smaller CPU and memory overhead, thus catching fewer types of bug. 3  Addrcheck has been removed as of version 3.2.0.
About Valgrind. Valgrind is a GPL'd system for debugging and profiling Linux programs. With Valgrind's tool suite you can automatically detect many memory management and threading bugs, avoiding hours of frustrating bug-hunting, making your programs more stable. You can also perform detailed profiling to help speed up your programs. 1 Valgrind is not a toy. 2  Valgrind is first and foremost a debugging and profiling system for large, complex programs. 3  We have had feedback from users working on projects with up to 25 million lines of code.
Description. Valgrind is a flexible program for debugging and profiling Linux executables. It consists of a core, which provides a synthetic CPU in software, and a series of debugging and profiling tools. The architecture is modular, so that new tools can be created easily and without disturbing the existing structure. 
Valgrind /ˈvaelɡrɪnd/ ˈvælɡrɪnd is a programming tool for memory, debugging memory leak, detection and. Profiling valgrind was originally designed to be a free memory debugging tool For linux on, x86 but has since evolved to become a generic framework for creating dynamic analysis tools such as checkers and. profilers 1 Since valgrind itself provides a trace back from a segmentation fault, the none tool provides this traceback at minimal overhead. 2  Addrcheck, similar to Memcheck but with much smaller CPU and memory overhead, thus catching fewer types of bug. 3  Addrcheck has been removed as of version 3.2.0.
1 Valgrind can help you speed up your programs. 2  With Valgrind tools you can also perform very detailed profiling to help find bottlenecks in your programs. 3  Valgrind is free. 4  Free-as-in-speech: you can download it, read the source code, make modifications, and pass them on, all within the limits of the GNU GPL. 1 Valgrind is not a toy. 2  Valgrind is first and foremost a debugging and profiling system for large, complex programs. 3  We have had feedback from users working on projects with up to 25 million lines of code.
Valgrind (downloadable here) is a utility for debugging programs for the x86 and x86-64 Linux platforms. It has recently become highly popular as it can be used to easily track down memory management and threading bugs that are hard to track down otherwise. How it works [edit]. Valgrind is essentially an x86 machine-code interpreter. In fact it runs as a just-in-time compiler converting the machine code to an internal language, instrumenting that language and and then code-generating from that language.
Observe that the output of the program and the output of valgrind are interleaved; to get around that, it is handy to redirect the output to a separate file. This time the errors reported are for uninitialized values, and valgrind indicates where the access takes place (line 11 of example2.c). 