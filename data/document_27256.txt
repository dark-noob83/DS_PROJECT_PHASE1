The C++ programming language has a history going back to 1979, when Bjarne Stroustrup was doing work for his Ph.D. thesis. One of the languages Stroustrup had the opportunity to work with was a language called Simula, which as the name implies is a language primarily designed for simulations. In 1983, the name of the language was changed from C with Classes to C++. The ++ operator in the C language is an operator for incrementing a variable, which gives some insight into how Stroustrup regarded the language.
A Brief History of C++. In the early 1970s, Dennis Ritchie of Bell Laboratories was engaged in a project to develop a new operating system. Ritchie discovered that in order to accomplish his task he needed the use of a programming language that was concise and that produced compact and speedy programs. In an attempt to maintain portability of both the C and C++ languages, the American National Standards Institute (ANSI) developed a standard of consistency for C and C++ programming. While we will be working primarily with this ANSI standard, we will also be examining the idiosyncrasies of Microsoft Visual C++ 6.0.
C vs C++. C and C++ are both programming languages. C is a procedural programming language whereas C++ is an object oriented programming language. There were certain drawbacks in the C language. That is why, C++ was developed. The C language. C is a computer programming language developed in 1972 at Bell Labs. C++ was developed at Bell Laboratories and it termed as the enhanced version of C language. The features of C++ language include templates, classes, operator overloading and virtual functions. Exception handling and multiple inheritances were also introduced in C++.
Bjarne Stroustrup, a Danish computer scientist, began his work on C++'s predecessor  C with Classes  in 1979. The motivation for creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. C++ is standardized by the International Organization for Standardization (ISO), with the latest (and current) standard version ratified and published by ISO in December 2014 as ISO/IEC 14882:2014 (informally known as C++14).
C++ is the most commonly used among all programming languages. C++ was developed at Bell Laboratories and it termed as the enhanced version of C language. The features of C++ language include templates, classes, operator overloading and virtual functions. Exception handling and multiple inheritances were also introduced in C++.
This need led Ritchie to develop the programming language called C. In the early 1980's, also at Bell Laboratories, another programming language was created which was based upon the C language. This new language was developed by Bjarne Stroustrup and was called C++. In an attempt to maintain portability of both the C and C++ languages, the American National Standards Institute (ANSI) developed a standard of consistency for C and C++ programming. While we will be working primarily with this ANSI standard, we will also be examining the idiosyncrasies of Microsoft Visual C++ 6.0.
Before the initial standardization in 1998, C++ was developed by Bjarne Stroustrup at Bell Labs since 1979, as an extension of the C language as he wanted an efficient and flexible language similar to C, which also provided high-level features for program organization. C++ is standardized by the International Organization for Standardization (ISO), with the latest (and current) standard version ratified and published by ISO in December 2014 as ISO/IEC 14882:2014 (informally known as C++14).
“C++ is a horrible language,” starts a reply of his to someone who asked why Git is written in C not C++. Many well-known Linux programs are written in C — not C++ — such as Apache and Nginx webservers. Some projects are developed in both C++ and C and often other programming languages as well. An interesting paper was published looking at how the choice of programming language impacts software quality and developer productivity. 
I haven't heard anyone saying that Java was developed on top of C/C++, but that's beside the point. What I think the intention here is that the original bunch (Gosling, Sheridan and others) intended to derive the syntax from C/C++, I assume to allow for easier transition. share | improve this answer. You can write a JVM in any language. It merely needs to interpret bytecode. You can write one in assembly if you want to. But that does not imply that the Java language was developed on top of C,C++, or whatever you meant by that.