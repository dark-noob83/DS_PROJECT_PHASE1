merge is a generic function whose principal method is for data frames: the default method coerces its arguments to data frames and calls the data.frame method. By default the data frames are merged on the columns with names they both have, but separate specifications of the columns can be given by by.x and by.y. The rows in the two data frames that match on the specified columns are extracted, and joined together. For the precise meaning of ‘match’, see match. Columns to merge on can be specified by name, number or by a logical vector: the name row.names or the number 0 specifies the row names. If specified by name it must correspond uniquely to a named column in the input.
Merge, join, and concatenate ¶. pandas provides various facilities for easily combining together Series, DataFrame, and Panel objects with various kinds of set logic for the indexes and relational algebra functionality in the case of join / merge-type operations. To join on multiple keys, the passed DataFrame must have a. : Now this can be joined by passing the two key column names: The default for. is to perform a left join (essentially a “VLOOKUP” operation, for Excel users), which uses only the keys found in the calling DataFrame.
Adding Columns. To merge two data frames (datasets) horizontally, use the merge function. In most cases, you join two data frames by one or more common key variables (i.e., an inner join).
Like SQL's JOIN clause, pandas.merge allows two DataFrames to be joined on one or more keys. The function provides a series of parameters (on, left_on, right_on, left_index, right_index) allowing you to specify the columns or indexes on which to join. Combining. pandas also provides a way to combine DataFrames along an axis-pandas.concat. While the function is equivalent to SQL's UNION clause, there's a lot more that can be done with it. pandas.concat takes a list of Series or DataFrames and returns a Series or DataFrame of the concatenated objects.
, the intersection of the columns in the DataFrames will be inferred to be the join keys. : Columns from the left DataFrame to use as keys. Can either be column names or arrays with length equal to the length of the DataFrame. : Columns from the right DataFrame to use as keys. Can either be column names or arrays with length equal to the length of the DataFrame. : If. , use the index (row labels) from the left DataFrame as its join key(s). To join on multiple keys, the passed DataFrame must have a. : Now this can be joined by passing the two key column names: The default for. is to perform a left join (essentially a “VLOOKUP” operation, for Excel users), which uses only the keys found in the calling
: Add a column to the output DataFrame called. with information on the source of each row. is Categorical-type and takes on a value of. for observations whose merge key only appears in. DataFrame, for observations whose merge key only appears in. DataFrame, and. if the observation’s merge key is found in both. To join on multiple keys, the passed DataFrame must have a. : Now this can be joined by passing the two key column names: The default for. is to perform a left join (essentially a “VLOOKUP” operation, for Excel users), which uses only the keys found in the calling DataFrame.
Solution. The above examples index into the data frame by treating it as a list (a data frame is essentially a list of vectors). You can also use matrix-style indexing, as in data[row, col] , where row is left blank. The drawback to matrix indexing is that it gives different results when you specify just one column. In these cases, the returned object is a vector, not a data frame. 
I chose to break it into three parts as I felt it was too long and daunting as one. Part 1: Intro to pandas data structures, covers the basics of the library's two main data structures-Series and DataFrames. Part 2: Working with DataFrames, dives a bit deeper into the functionality of DataFrames. It shows how to inspect, select, filter, merge, combine, and group your data. Part 3: Using pandas with the MovieLens dataset, applies the learnings of the first two parts in order to answer a few basic analysis questions about the MovieLens ratings data. 
Index should be similar to one of the columns in this one. If a Series is passed, its name attribute must be set, and that will be used as the column name in the resulting joined DataFrame. on: column name, tuple/list of column names, or array-like. Column(s) to use for joining, otherwise join on index. If multiples columns given, the passed DataFrame must have a MultiIndex. Can pass an array as the join key if not already contained in the calling DataFrame. Like an Excel VLOOKUP operation. how : {‘left’, ‘right’, ‘outer’, ‘inner’}.
Binding row or column [edit]. Most of the times when you are working with data frames, you are changing the data and one of the several changes you can do to a data frame is adding column or row and as the result increase the dimension of your data frame. 